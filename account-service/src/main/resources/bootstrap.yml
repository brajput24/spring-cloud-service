spring:
  cloud:
    config:
      uri:  http://localhost:8888
  application:
    name: account-service
  profiles:
      active: ${PROFILES:e1-dev}
# Set this service to start on a random port number that is not being
# used, this will allow us to launch multiple versions of the service
# and register them with Eureka for discovery
server:
  port: 8080
eureka:
  client:
    fetch-registry: false # This service does not call any other service so no need to cache list of registered services
    register-with-eureka: true # This service should register itself in eureka
    serviceUrl:
      defaultZone: ${DISCOVERY_URL:http://localhost:8761}/eureka/
  instance:
    instance-id: ${spring.application.name}:${random.int} # unique id for app instances registered with eureka
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
